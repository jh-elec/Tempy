/* Generated by CodeDescriptor 1.2.0.0713 */
/*
* Project Name      -> RX8564
* Version           -> 1.0.0.0714
* Author            -> Hm @ Workstadion.: QP-01-02
* Build Date        -> 14.07.2017 07:18:15
* Description       -> Device Driver
*
*
*
*/
#ifndef __RX8564_H__
#define __RX8564_H__

#include <avr/io.h>

/* Slave Address */
#define RX8564_ADDR 0xA2 

/* rtcSetClkOut Frequency */
#define F_32768Hz 0x80
#define F_1024Hz  0x81
#define F_32Hz	  0x82
#define F_1Hz	  0x83
#define F_STOP	  0x00


/* register addresses */
#define control_1_register			0x00
#define control_2_register			0x01
#define seconds_register			0x02
#define minutes_register			0x03
#define hours_register				0x04
#define day_register				0x05
#define day_name_register			0x06
#define month_Register				0x07
#define year_Register				0x08
#define minute_alert_register		0x09
#define hour_alert_register			0x0A
#define day_alert_register			0x0B
#define day_Name_alert_register		0x0C
#define	clkout_frequency_register	0x0D
#define timer_control_register		0x0E
#define timer_register				0x0F



 typedef struct
 {
	 uint8_t	second;
	 uint8_t	minute;
	 uint8_t	hour;
	 uint8_t	month;
	 uint8_t	day;
	 uint8_t	dayName;
	 uint16_t	year;
	 
	 uint8_t	alrt_minute;
	 uint8_t	alrt_hour;
	 uint8_t	alrt_day;
	 uint8_t	alrt_dayName;
	 
 }rx8564_t;


/* rtcInit
* @para             -> init the rtc
* @return           -> -none
* @description      -> starts all timer
*/
void rtcInit(void);

/* rtcSetTime
* @para             -> hour, minutes, seconds
* @return           -> -none
* @description      -> all parameters in dec
*/
void rtcSetTime(uint8_t hour, uint8_t minutes, uint8_t seconds);

/* rtcSetDate
* @para             -> day, week_day, month, year
* @return           -> -none
* @description      -> all parameters in dec
*/
void rtcSetDate(uint8_t day,uint8_t week_day, uint8_t month, uint16_t year);

/* rtcSetAlrt
* @para             -> day, week_day, hour, minutes
* @return           -> -none
* @description      -> all parameters in dec
*/
void rtcSetAlrt(uint8_t day, uint8_t week_day, uint8_t hour, uint8_t minutes);

/* rtcSetClkOut
* @para             -> frequency
* @return           -> -none
* @description      -> set the speed of clkout pin
*/
void rtcSetClkOut(uint8_t frequency);

/* rtcGetData
* @para             -> struct of rx8564_t
* @return           -> -none
* @description      -> save all read outs in the buffer
*/
void rtcGetData(rx8564_t *buffer);

/* rtcSetTimCtrl
* @para             -> config of timer mask
* @return           -> -none
* @description      -> for more details see datasheet
*/
void rtcSetTimCtrl(uint8_t mask);

/* rtcSetCtrl2
* @para             -> config of rtc
* @return           -> -none
* @description      -> for more details see datasheet
*/
void rtcSetCtrl2(uint8_t mask);

/* rtcReadTim
* @para             -> -none
* @return           -> register value
* @description      -> for more details see datasheet
*/
uint8_t rtcReadTim(void);


uint8_t bcdToDec(uint8_t val);
uint8_t decToBcd(uint8_t val);


#endif